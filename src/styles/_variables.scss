@charset "utf-8";

/* colors */
$zero-black: #000000;
$pastel-blue: #a8daff;
$mint-green: #71f79f;
$sea-blue: #0074d9;
$charcoal-gray: #333333;
$alert-red: #eb5757;

// grays
$atom-gray: #e5e5e5;
$watermark-gray: #bdbdbd;
$white: #ffffff;
$white-80-percent: rgba(255, 255, 255, 0.8);

// base font size
$base-unit: 16px;

/* box shadow */
$atomic-4px-box-shadow: 0px 4px 4px rgba(43, 42, 42, 0.1);
$footer-box-shadow: 0px -1px 4px rgba(0, 0, 0, 0.25);
$card-box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);

$breakpoint-min: 320px; /* iphone 5 */
$breakpoint-iphone-x: 375px; /* iphone X */
$breakpoint-max: 414px; /* larger mobile screens */

/*fonts and type*/
$fonts-path: "../assets/fonts/";
$base-font-family: "Roboto";
$font-stack: $base-font-family, sans-serif;

/*font weights*/

$regular: 400;
$medium: 500;
$bold: 900;

$font-weight: (
	"regular": $regular,
	"medium": $medium,
	"bold": $bold,
);

@each $name, $weight in $font-weight {
	.text-#{$name} {
		font-weight: $weight;
	}
}

@mixin fontfacer(
	$type: "",
	$weight: "",
	$font-display: optional,
	$style: normal
) {
	@font-face {
		font-family: $base-font-family;
		src: url("#{$fonts-path}#{$base-font-family}-#{$type}.ttf")
			format("truetype");
		font-weight: $weight;
		font-style: $style;
		font-display: $font-display;
	}
}

@function line-heighter($initial-font-size, $line-height) {
	$unitless-height-ratio: ($line-height / $initial-font-size);
	@return #{$unitless-height-ratio};
}

/* rem to px*/
@function rem($size) {
	$remSize: $size / $base-unit;
	@return #{$remSize}rem;
}

/* figure out relative unitless line-height value */
@mixin fontsize-and-lineheight($size, $line-height) {
	font-size: $size; //provide a fallback in px
	line-height: line-heighter($size, $line-height);
	font-size: rem($size);
}

/* padding and margin utility class */
$space: 1rem;
$spaces: (
	0: 0,
	1: (
		$space * 0.25,
	),
	// 4
	2:
		(
			$space * 0.5,
		),
	// 8
	3:
		(
			$space * 0.75,
		),
	// 12
	4:
		(
			$space,
		),
	// 16
	5:
		(
			$space * 1.5,
		),
	// 24
	6:
		(
			$space * 2,
		),
	// 32
	7:
		(
			$space * 2.5,
		),
	// 40
	8:
		(
			$space * 3,
		),
	// 48
	9:
		(
			$space * 3.5,
		),
	10: (
		$space * 4,
	),
	// 64
);

$xy-box: (
	top: t,
	right: r,
	bottom: b,
	left: l,
);

@each $prop, $edge in (margin: m, padding: p) {
	@each $direction, $d in $xy-box {
		@each $unit, $rem in $spaces {
			// general single-number spacing
			.#{$prop}-#{$unit} {
				margin: #{$rem};
			}
			.#{$edge}-#{$unit} {
				padding: #{$rem};
			}
			// top, bottom, left, right
			.#{$edge}#{$d}-#{$unit} {
				#{$prop}-#{$direction}: #{$rem};
			}

			// provide selectors for x-axis
			.#{$edge}h-#{$unit} {
				#{$prop}: 0 $rem;
			}
			// provide selectors for y-axis spacing
			.#{$edge}v-#{$unit} {
				#{$prop}: $rem 0;
			}
		}
	}
}

// Grid System , adapted from https://inspirationalpixels.com/grid-system-with-sass/

// Extends
%clearfix:after {
	display: block;
	clear: both;
	content: "";
}

$grid-spacing: 3%;

.row {
	@extend %clearfix;

	& + & {
		margin-top: $grid-spacing * 2;
	}
}

[class^="col-"] {
	float: left;
	margin-right: $grid-spacing;
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;

	&:last-child {
		margin-right: 0%;
	}
}

.col-1 {
	width: (100% / 12) - ($grid-spacing * 11 / 12);
}
.col-2 {
	width: (100% / 6) - ($grid-spacing * 10 / 12);
}
.col-3 {
	width: (100% / 4) - ($grid-spacing * 9 / 12);
}
.col-4 {
	width: (100% / 3) - ($grid-spacing * 8 / 12);
}
.col-5 {
	width: (100% / 2.4) - ($grid-spacing * 7 / 12);
}
.col-6 {
	width: (100% / 2) - ($grid-spacing * 6 / 12);
}
.col-7 {
	width: (100% / 1.714285714285714) - ($grid-spacing * 5 / 12);
}
.col-8 {
	width: (100% / 1.5) - ($grid-spacing * 4 / 12);
}
.col-9 {
	width: (100% / 1.333333333333333) - ($grid-spacing * 3 / 12);
}
.col-10 {
	width: (100% / 1.2) - ($grid-spacing * 2 / 12);
}
.col-11 {
	width: (100% / 1.090909090909091) - ($grid-spacing * 1 / 12);
}
.col-12 {
	width: 100%;
}
